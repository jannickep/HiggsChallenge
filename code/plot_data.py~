__docformat__ = 'restructedtext en'

import cPickle
import gzip
import os
import sys
import time
import random,string,math,csv
import scipy.linalg.blas
import numpy
import numpy as np
import numpy.lib.recfunctions
import matplotlib.pyplot as plt
import matplotlib as mpl

raw_data = list(csv.reader(open("../data/training.csv","rb"), delimiter=','))
x_raw = np.array([map(float, row[1:-2]) for row in raw_data[1:]])
header = list(raw_data[0])
histogram = np.histogram(x_raw[:,], 20)
'''
fig = plt.figure()
ax = fig.add_subplot(111)
ax.plot(histogram)
ax.set_title(header[0])
ax.set_xlabel('')
ax.set_ylabel('AMS Value')
plt.show()

'''
num_bins = 100




mpl.rcParams.update({'font.size': 4})


# set missing values to 0 to make scale nicer < most plots seem to be close to 0 already
# note: there will be a very large peak at 0 for some of these plots 
# TODO: make it so that missing values aren't plotted at all
m,n = x_raw.shape
for row in range(0,m):
    for col in range(0,n):
        if x_raw[row][col] == -999.0:
             x_raw[row][col] = 0.0

for n in range(0,30):
    min_x_raw = min(x_raw[:,n])
    max_x_raw = max(x_raw[:,n])
    if min_x_raw < 0:
        binwidth = max_x_raw/num_bins 
    elif min_x_raw >= 0:
        binwidth = (max_x_raw-min_x_raw)/num_bins
    #plt.figure(n)
    plt.subplot(6,5,n+1)
    plt.hist(x_raw[:,n],bins=np.arange(min_x_raw, max_x_raw + binwidth, binwidth),range=[min_x_raw,max_x_raw])
    plt.title(header[n])
    plt.xlabel("Value")
    plt.ylabel("Frequency")
    

plt.show()
